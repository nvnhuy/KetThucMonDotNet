#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VEXE")]
	public partial class BanVeXeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertChuyenXe(ChuyenXe instance);
    partial void UpdateChuyenXe(ChuyenXe instance);
    partial void DeleteChuyenXe(ChuyenXe instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertNhanvien(Nhanvien instance);
    partial void UpdateNhanvien(Nhanvien instance);
    partial void DeleteNhanvien(Nhanvien instance);
    partial void InsertTuyenXe(TuyenXe instance);
    partial void UpdateTuyenXe(TuyenXe instance);
    partial void DeleteTuyenXe(TuyenXe instance);
    partial void InsertVeXe(VeXe instance);
    partial void UpdateVeXe(VeXe instance);
    partial void DeleteVeXe(VeXe instance);
    partial void InsertXe(Xe instance);
    partial void UpdateXe(Xe instance);
    partial void DeleteXe(Xe instance);
    #endregion
		
		public BanVeXeDataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.VEXEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BanVeXeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BanVeXeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BanVeXeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BanVeXeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<ChuyenXe> ChuyenXes
		{
			get
			{
				return this.GetTable<ChuyenXe>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<Nhanvien> Nhanviens
		{
			get
			{
				return this.GetTable<Nhanvien>();
			}
		}
		
		public System.Data.Linq.Table<TuyenXe> TuyenXes
		{
			get
			{
				return this.GetTable<TuyenXe>();
			}
		}
		
		public System.Data.Linq.Table<VeXe> VeXes
		{
			get
			{
				return this.GetTable<VeXe>();
			}
		}
		
		public System.Data.Linq.Table<Xe> Xes
		{
			get
			{
				return this.GetTable<Xe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCV;
		
		private string _TenCV;
		
		private EntitySet<Nhanvien> _Nhanviens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    partial void OnTenCVChanging(string value);
    partial void OnTenCVChanged();
    #endregion
		
		public ChucVu()
		{
			this._Nhanviens = new EntitySet<Nhanvien>(new Action<Nhanvien>(this.attach_Nhanviens), new Action<Nhanvien>(this.detach_Nhanviens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCV", DbType="NChar(15)")]
		public string TenCV
		{
			get
			{
				return this._TenCV;
			}
			set
			{
				if ((this._TenCV != value))
				{
					this.OnTenCVChanging(value);
					this.SendPropertyChanging();
					this._TenCV = value;
					this.SendPropertyChanged("TenCV");
					this.OnTenCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_Nhanvien", Storage="_Nhanviens", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<Nhanvien> Nhanviens
		{
			get
			{
				return this._Nhanviens;
			}
			set
			{
				this._Nhanviens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nhanviens(Nhanvien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_Nhanviens(Nhanvien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuyenXe")]
	public partial class ChuyenXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChuyen;
		
		private string _TenChuyen;
		
		private string _MaTuyen;
		
		private string _MaXe;
		
		private string _GioXuatPhat;
		
		private EntitySet<VeXe> _VeXes;
		
		private EntityRef<TuyenXe> _TuyenXe;
		
		private EntityRef<Xe> _Xe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChuyenChanging(string value);
    partial void OnMaChuyenChanged();
    partial void OnTenChuyenChanging(string value);
    partial void OnTenChuyenChanged();
    partial void OnMaTuyenChanging(string value);
    partial void OnMaTuyenChanged();
    partial void OnMaXeChanging(string value);
    partial void OnMaXeChanged();
    partial void OnGioXuatPhatChanging(string value);
    partial void OnGioXuatPhatChanged();
    #endregion
		
		public ChuyenXe()
		{
			this._VeXes = new EntitySet<VeXe>(new Action<VeXe>(this.attach_VeXes), new Action<VeXe>(this.detach_VeXes));
			this._TuyenXe = default(EntityRef<TuyenXe>);
			this._Xe = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuyen", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChuyen
		{
			get
			{
				return this._MaChuyen;
			}
			set
			{
				if ((this._MaChuyen != value))
				{
					this.OnMaChuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChuyen = value;
					this.SendPropertyChanged("MaChuyen");
					this.OnMaChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuyen", DbType="NVarChar(50)")]
		public string TenChuyen
		{
			get
			{
				return this._TenChuyen;
			}
			set
			{
				if ((this._TenChuyen != value))
				{
					this.OnTenChuyenChanging(value);
					this.SendPropertyChanging();
					this._TenChuyen = value;
					this.SendPropertyChanged("TenChuyen");
					this.OnTenChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTuyen", DbType="Char(10)")]
		public string MaTuyen
		{
			get
			{
				return this._MaTuyen;
			}
			set
			{
				if ((this._MaTuyen != value))
				{
					if (this._TuyenXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTuyenChanging(value);
					this.SendPropertyChanging();
					this._MaTuyen = value;
					this.SendPropertyChanged("MaTuyen");
					this.OnMaTuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXe", DbType="Char(10)")]
		public string MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					if (this._Xe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioXuatPhat", DbType="Char(5)")]
		public string GioXuatPhat
		{
			get
			{
				return this._GioXuatPhat;
			}
			set
			{
				if ((this._GioXuatPhat != value))
				{
					this.OnGioXuatPhatChanging(value);
					this.SendPropertyChanging();
					this._GioXuatPhat = value;
					this.SendPropertyChanged("GioXuatPhat");
					this.OnGioXuatPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenXe_VeXe", Storage="_VeXes", ThisKey="MaChuyen", OtherKey="MaChuyen")]
		public EntitySet<VeXe> VeXes
		{
			get
			{
				return this._VeXes;
			}
			set
			{
				this._VeXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TuyenXe_ChuyenXe", Storage="_TuyenXe", ThisKey="MaTuyen", OtherKey="MaTuyen", IsForeignKey=true)]
		public TuyenXe TuyenXe
		{
			get
			{
				return this._TuyenXe.Entity;
			}
			set
			{
				TuyenXe previousValue = this._TuyenXe.Entity;
				if (((previousValue != value) 
							|| (this._TuyenXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TuyenXe.Entity = null;
						previousValue.ChuyenXes.Remove(this);
					}
					this._TuyenXe.Entity = value;
					if ((value != null))
					{
						value.ChuyenXes.Add(this);
						this._MaTuyen = value.MaTuyen;
					}
					else
					{
						this._MaTuyen = default(string);
					}
					this.SendPropertyChanged("TuyenXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_ChuyenXe", Storage="_Xe", ThisKey="MaXe", OtherKey="MaXe", IsForeignKey=true)]
		public Xe Xe
		{
			get
			{
				return this._Xe.Entity;
			}
			set
			{
				Xe previousValue = this._Xe.Entity;
				if (((previousValue != value) 
							|| (this._Xe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe.Entity = null;
						previousValue.ChuyenXes.Remove(this);
					}
					this._Xe.Entity = value;
					if ((value != null))
					{
						value.ChuyenXes.Add(this);
						this._MaXe = value.MaXe;
					}
					else
					{
						this._MaXe = default(string);
					}
					this.SendPropertyChanged("Xe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VeXes(VeXe entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenXe = this;
		}
		
		private void detach_VeXes(VeXe entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _TenKH;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private EntitySet<VeXe> _VeXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._VeXes = new EntitySet<VeXe>(new Action<VeXe>(this.attach_VeXes), new Action<VeXe>(this.detach_VeXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_VeXe", Storage="_VeXes", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<VeXe> VeXes
		{
			get
			{
				return this._VeXes;
			}
			set
			{
				this._VeXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VeXes(VeXe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_VeXes(VeXe entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nhanvien")]
	public partial class Nhanvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MatKhau;
		
		private string _TenNV;
		
		private System.Nullable<System.DateTime> _NgaySinhNV;
		
		private string _DiaChiNV;
		
		private string _MaCV;
		
		private EntitySet<Xe> _Xes;
		
		private EntityRef<ChucVu> _ChucVu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnNgaySinhNVChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhNVChanged();
    partial void OnDiaChiNVChanging(string value);
    partial void OnDiaChiNVChanged();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    #endregion
		
		public Nhanvien()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			this._ChucVu = default(EntityRef<ChucVu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNV", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinhNV
		{
			get
			{
				return this._NgaySinhNV;
			}
			set
			{
				if ((this._NgaySinhNV != value))
				{
					this.OnNgaySinhNVChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNV = value;
					this.SendPropertyChanged("NgaySinhNV");
					this.OnNgaySinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNV", DbType="NVarChar(50)")]
		public string DiaChiNV
		{
			get
			{
				return this._DiaChiNV;
			}
			set
			{
				if ((this._DiaChiNV != value))
				{
					this.OnDiaChiNVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNV = value;
					this.SendPropertyChanged("DiaChiNV");
					this.OnDiaChiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Char(10)")]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Xe", Storage="_Xes", ThisKey="MaNV", OtherKey="MaTX")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_Nhanvien", Storage="_ChucVu", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.Nhanviens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.Nhanviens.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(string);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TuyenXe")]
	public partial class TuyenXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTuyen;
		
		private string _TenTuyen;
		
		private System.Nullable<int> _GiaVe;
		
		private EntitySet<ChuyenXe> _ChuyenXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTuyenChanging(string value);
    partial void OnMaTuyenChanged();
    partial void OnTenTuyenChanging(string value);
    partial void OnTenTuyenChanged();
    partial void OnGiaVeChanging(System.Nullable<int> value);
    partial void OnGiaVeChanged();
    #endregion
		
		public TuyenXe()
		{
			this._ChuyenXes = new EntitySet<ChuyenXe>(new Action<ChuyenXe>(this.attach_ChuyenXes), new Action<ChuyenXe>(this.detach_ChuyenXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTuyen", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTuyen
		{
			get
			{
				return this._MaTuyen;
			}
			set
			{
				if ((this._MaTuyen != value))
				{
					this.OnMaTuyenChanging(value);
					this.SendPropertyChanging();
					this._MaTuyen = value;
					this.SendPropertyChanged("MaTuyen");
					this.OnMaTuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTuyen", DbType="NVarChar(30)")]
		public string TenTuyen
		{
			get
			{
				return this._TenTuyen;
			}
			set
			{
				if ((this._TenTuyen != value))
				{
					this.OnTenTuyenChanging(value);
					this.SendPropertyChanging();
					this._TenTuyen = value;
					this.SendPropertyChanged("TenTuyen");
					this.OnTenTuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaVe", DbType="Int")]
		public System.Nullable<int> GiaVe
		{
			get
			{
				return this._GiaVe;
			}
			set
			{
				if ((this._GiaVe != value))
				{
					this.OnGiaVeChanging(value);
					this.SendPropertyChanging();
					this._GiaVe = value;
					this.SendPropertyChanged("GiaVe");
					this.OnGiaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TuyenXe_ChuyenXe", Storage="_ChuyenXes", ThisKey="MaTuyen", OtherKey="MaTuyen")]
		public EntitySet<ChuyenXe> ChuyenXes
		{
			get
			{
				return this._ChuyenXes;
			}
			set
			{
				this._ChuyenXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuyenXes(ChuyenXe entity)
		{
			this.SendPropertyChanging();
			entity.TuyenXe = this;
		}
		
		private void detach_ChuyenXes(ChuyenXe entity)
		{
			this.SendPropertyChanging();
			entity.TuyenXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VeXe")]
	public partial class VeXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVe;
		
		private string _MaKH;
		
		private string _MaChuyen;
		
		private System.Nullable<System.DateTime> _NgayDi;
		
		private string _ViTri;
		
		private EntityRef<ChuyenXe> _ChuyenXe;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVeChanging(int value);
    partial void OnMaVeChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaChuyenChanging(string value);
    partial void OnMaChuyenChanged();
    partial void OnNgayDiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDiChanged();
    partial void OnViTriChanging(string value);
    partial void OnViTriChanged();
    #endregion
		
		public VeXe()
		{
			this._ChuyenXe = default(EntityRef<ChuyenXe>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaVe
		{
			get
			{
				return this._MaVe;
			}
			set
			{
				if ((this._MaVe != value))
				{
					this.OnMaVeChanging(value);
					this.SendPropertyChanging();
					this._MaVe = value;
					this.SendPropertyChanged("MaVe");
					this.OnMaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuyen", DbType="Char(10)")]
		public string MaChuyen
		{
			get
			{
				return this._MaChuyen;
			}
			set
			{
				if ((this._MaChuyen != value))
				{
					if (this._ChuyenXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChuyen = value;
					this.SendPropertyChanged("MaChuyen");
					this.OnMaChuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDi", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDi
		{
			get
			{
				return this._NgayDi;
			}
			set
			{
				if ((this._NgayDi != value))
				{
					this.OnNgayDiChanging(value);
					this.SendPropertyChanging();
					this._NgayDi = value;
					this.SendPropertyChanged("NgayDi");
					this.OnNgayDiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTri", DbType="Char(3)")]
		public string ViTri
		{
			get
			{
				return this._ViTri;
			}
			set
			{
				if ((this._ViTri != value))
				{
					this.OnViTriChanging(value);
					this.SendPropertyChanging();
					this._ViTri = value;
					this.SendPropertyChanged("ViTri");
					this.OnViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenXe_VeXe", Storage="_ChuyenXe", ThisKey="MaChuyen", OtherKey="MaChuyen", IsForeignKey=true)]
		public ChuyenXe ChuyenXe
		{
			get
			{
				return this._ChuyenXe.Entity;
			}
			set
			{
				ChuyenXe previousValue = this._ChuyenXe.Entity;
				if (((previousValue != value) 
							|| (this._ChuyenXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuyenXe.Entity = null;
						previousValue.VeXes.Remove(this);
					}
					this._ChuyenXe.Entity = value;
					if ((value != null))
					{
						value.VeXes.Add(this);
						this._MaChuyen = value.MaChuyen;
					}
					else
					{
						this._MaChuyen = default(string);
					}
					this.SendPropertyChanged("ChuyenXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_VeXe", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.VeXes.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.VeXes.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xe")]
	public partial class Xe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaXe;
		
		private string _TTXe;
		
		private string _MaTX;
		
		private EntitySet<ChuyenXe> _ChuyenXes;
		
		private EntityRef<Nhanvien> _Nhanvien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaXeChanging(string value);
    partial void OnMaXeChanged();
    partial void OnTTXeChanging(string value);
    partial void OnTTXeChanged();
    partial void OnMaTXChanging(string value);
    partial void OnMaTXChanged();
    #endregion
		
		public Xe()
		{
			this._ChuyenXes = new EntitySet<ChuyenXe>(new Action<ChuyenXe>(this.attach_ChuyenXes), new Action<ChuyenXe>(this.detach_ChuyenXes));
			this._Nhanvien = default(EntityRef<Nhanvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXe", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTXe", DbType="VarChar(30)")]
		public string TTXe
		{
			get
			{
				return this._TTXe;
			}
			set
			{
				if ((this._TTXe != value))
				{
					this.OnTTXeChanging(value);
					this.SendPropertyChanging();
					this._TTXe = value;
					this.SendPropertyChanged("TTXe");
					this.OnTTXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTX", DbType="VarChar(20)")]
		public string MaTX
		{
			get
			{
				return this._MaTX;
			}
			set
			{
				if ((this._MaTX != value))
				{
					if (this._Nhanvien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTXChanging(value);
					this.SendPropertyChanging();
					this._MaTX = value;
					this.SendPropertyChanged("MaTX");
					this.OnMaTXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_ChuyenXe", Storage="_ChuyenXes", ThisKey="MaXe", OtherKey="MaXe")]
		public EntitySet<ChuyenXe> ChuyenXes
		{
			get
			{
				return this._ChuyenXes;
			}
			set
			{
				this._ChuyenXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Xe", Storage="_Nhanvien", ThisKey="MaTX", OtherKey="MaNV", IsForeignKey=true)]
		public Nhanvien Nhanvien
		{
			get
			{
				return this._Nhanvien.Entity;
			}
			set
			{
				Nhanvien previousValue = this._Nhanvien.Entity;
				if (((previousValue != value) 
							|| (this._Nhanvien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhanvien.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._Nhanvien.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._MaTX = value.MaNV;
					}
					else
					{
						this._MaTX = default(string);
					}
					this.SendPropertyChanged("Nhanvien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuyenXes(ChuyenXe entity)
		{
			this.SendPropertyChanging();
			entity.Xe = this;
		}
		
		private void detach_ChuyenXes(ChuyenXe entity)
		{
			this.SendPropertyChanging();
			entity.Xe = null;
		}
	}
}
#pragma warning restore 1591
